<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on digital. [nomad]</title>
    <link>http://anthonymcook.com/articles/</link>
    <description>Recent content in Articles on digital. [nomad]</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://anthonymcook.com/articles/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>powerline</title>
      <link>http://anthonymcook.com/articles/the-new-powerline/</link>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/the-new-powerline/</guid>
      <description>

&lt;aside&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; &lt;em&gt;This post is modified from the original. Mostly readability improvements and changes necessitated by the new layout and backend engine. It has not been updated for the latest Powerline as I have long since switched to &lt;a href=&#34;https://github.com/bling/vim-airline&#34;&gt;Airline&lt;/a&gt;.&lt;/em&gt;&lt;/aside&gt;

&lt;p&gt;While tweaking my configs, including fleshing out my .tmux.config and fixing bugs in my .vimrc I ran an update on my vim plugins. That&amp;rsquo;s when I noticed something was horribly wrong. Powerline wasn&amp;rsquo;t working anymore. It was throwing an error about Python. Python? What the hell? I don&amp;rsquo;t remember it requiring Python&amp;hellip;&lt;/p&gt;

&lt;p&gt;Then I discovered that it&amp;rsquo;d been completely rewritten and a lot had changed.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s clearly still Alpha quality software, so it will (probably) improve rapidly, but in the meantime there&amp;rsquo;s a lot of hurdles to jump through in order to get it even sort of working. Maybe I can save you a little time.&lt;/p&gt;

&lt;h2 id=&#34;the-basics:b588c49916508cfd3540e7ace30ddadd&#34;&gt;The Basics&lt;/h2&gt;

&lt;p&gt;The new Powerline is useless without the below prerequisites, so make sure you install whichever ones you intend on using if you haven&amp;rsquo;t already, but there&amp;rsquo;s a few caveats you want to watch out for before you even really get to the point of making use of it.&lt;/p&gt;

&lt;h2 id=&#34;utf-8-terminal-emulator:b588c49916508cfd3540e7ace30ddadd&#34;&gt;UTF-8 Terminal Emulator&lt;/h2&gt;

&lt;p&gt;Okay let&amp;rsquo;s face it, if you&amp;rsquo;re on OSX, iTerm2 is amazing and you should be using it.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s been some fixes to custom codepoint font support in iTerm in the last couple of weeks so its best if you grab a nightly or compile it yourself if you&amp;rsquo;re feeling really masochistic.&lt;/p&gt;

&lt;p&gt;I recommend downloading a precompiled nightly until a new stable is released.&lt;/p&gt;

&lt;aside&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; &lt;em&gt;Latest stable should have full support.&lt;/em&gt;
&lt;/aside&gt;

&lt;p&gt;Install it as usual, it probably won&amp;rsquo;t explode. But if it does, wait until the next iTerm nightly or grab an official release and mourn your utf symbols.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re on Linux then iTerm isn&amp;rsquo;t an option (sadly), so install rxvt-unicode or terminator or whatever you want, just make sure it has solid utf support.&lt;/p&gt;

&lt;h2 id=&#34;vim:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Vim&lt;/h2&gt;

&lt;p&gt;Vim needs to be compiled Python support, if you&amp;rsquo;re on OSX then MacVim has you covered already. You can install it with Homebrew and you&amp;rsquo;re good to go. On Linux you&amp;rsquo;ll have to select a package that supports it or compile it yourself. For instance Ubuntu I use &lt;code&gt;vim-nox&lt;/code&gt; for non-gui and &lt;code&gt;vim-gtk&lt;/code&gt; for gui support. The latter has better color support and since only has a library overhead of about 30MB it might be worth it to you to install anyway. If you&amp;rsquo;re on Gentoo make sure your USE flags have &lt;code&gt;+python&lt;/code&gt; in the list.&lt;/p&gt;

&lt;h2 id=&#34;python-and-the-powerline-module:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Python (and the Powerline module)&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll need some sort of Python 2.7ish install (as far as I can tell), and you&amp;rsquo;ll need pip installed as well. The version that comes with Homebrew is good, but you&amp;rsquo;ll have to add a configuration option to your .vimrc if you do.&lt;/p&gt;

&lt;p&gt;First install pip if you don&amp;rsquo;t have it already, and then you can install the Python module:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pip install https://github.com/Lokaltog/powerline/tarball/develop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don&amp;rsquo;t even try to pip install powerline, the &amp;ldquo;powerline&amp;rdquo; package has nothing even slightly to do with this, its an unfortunate naming conflict.&lt;/p&gt;

&lt;p&gt;Once that was done I had to add this to my &lt;code&gt;.vimrc&lt;/code&gt; to get it to work:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python import sys; sys.path.append(&amp;quot;/usr/local/lib/python2.7/site-packages/&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But on OSX you might find the package here instead:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python import sys; sys.path.append(&amp;quot;/Library/Python/2.7/site-packages&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;finding-python-s-site-packages:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Finding Python&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Your path might need to be different, if you can&amp;rsquo;t intuit it, you can have Python tell you where it hides its packages.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First ensure that Python can find it by seeing if &lt;code&gt;powerline&lt;/code&gt; in the list of modules pip is aware of:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pip freeze | grep powerline
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If its there then you can open up a python repl and have it tell you where the file is at:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import powerline
powerline.__file__
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have that, you can figure out the path to the site-packages directory that you need.&lt;/p&gt;

&lt;h2 id=&#34;fonts:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Fonts&lt;/h2&gt;

&lt;p&gt;Part of Powerline&amp;rsquo;s aesthetic appeal comes partly from its custom UTF fonts. So you&amp;rsquo;ll need those to get it looking its best.&lt;/p&gt;

&lt;p&gt;The codepoints have changed in the new version of Powerline. This means that &lt;strong&gt;your old fonts WILL NOT WORK&lt;/strong&gt;. Seriously, don&amp;rsquo;t even try it. You&amp;rsquo;ll just end up hating yourself. In fact, you might as well remove all your old custom Powerline fonts, they&amp;rsquo;re pretty much useless now.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re on OSX or Windows, you&amp;rsquo;ll have to &lt;a href=&#34;https://github.com/Lokaltog/powerline-fonts&#34;&gt;download the new ones&lt;/a&gt;. They&amp;rsquo;re not all there yet unfortunately, but the good news is &lt;a href=&#34;http://lokaltog.github.com/powerline/fontpatching.html&#34;&gt;you can patch them yourself&lt;/a&gt; which I&amp;rsquo;m not even going to go into, you have fun with that.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re on Linux, you might be in luck, try &lt;a href=&#34;http://lokaltog.github.com/powerline/overview.html#linux&#34;&gt;this bit of the install guide&lt;/a&gt; and you might never have to patch your fonts again!&lt;/p&gt;

&lt;h2 id=&#34;configuration:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Okay that covers the install of the requirements (I think.. let me know if I missed one). The rest is pretty straight forward.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://lokaltog.github.com/powerline/&#34;&gt;official install guide&lt;/a&gt; will explain the rest to you, but I&amp;rsquo;ll put some of it here for posterity.&lt;/p&gt;

&lt;h3 id=&#34;vim-1:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Vim&lt;/h3&gt;

&lt;p&gt;You just need to drop this line into your .vimrc and you&amp;rsquo;ll be off to the races:&lt;/p&gt;

&lt;p&gt;python from powerline.ext.vim import source_plugin; source_plugin()
If you figured out where your Python has installed Powerline at, and you can&amp;rsquo;t get Python to work in Vim, you can use the absolute path like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;source {path}/powerline/ext/vim/source_plugin.vim
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;help-and-troubleshooting:b588c49916508cfd3540e7ace30ddadd&#34;&gt;Help and Troubleshooting&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lokaltog.github.com/powerline/&#34;&gt;The official docs have different information.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Search the open AND closed &lt;a href=&#34;https://github.com/Lokaltog/powerline/issues&#34;&gt;github issues&lt;/a&gt;, seriously, there is loads of good advice there.&lt;/li&gt;
&lt;li&gt;Ignore anything older than a month, since its probably about the old version of Powerline - and a completely different codebase.&lt;/li&gt;
&lt;li&gt;Use Google&amp;rsquo;s site search syntax like this: &lt;code&gt;site:https://github.com/Lokaltog/powerline/issues&lt;/code&gt; to search powerline&amp;rsquo;s github issues.. yes I&amp;rsquo;m saying this twice, it was a big help to me.&lt;/li&gt;
&lt;li&gt;I never got the Python version of Powerline to work for Tmux yet (appears to be a bug in the weather widget).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Access Growl&#39;s log on OSX</title>
      <link>http://anthonymcook.com/articles/access-growls-log-on-osx/</link>
      <pubDate>Sun, 09 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/access-growls-log-on-osx/</guid>
      <description>&lt;p&gt;Open a terminal and drop this in:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;touch ~/Library/Logs/Growl.log
defaults write com.Growl.GrowlHelperApp GrowlLoggingEnabled -bool YES
defaults write com.Growl.GrowlHelperApp GrowlLogType 1
defaults write com.Growl.GrowlHelperApp &amp;quot;Custom log history 1&amp;quot; $HOME/Library/Logs/Growl.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you&amp;rsquo;ll find the log file at &lt;code&gt;$HOME/Library/Logs/Growl.log&lt;/code&gt; and you can parse it or do whatever, like display messages on your desktop with GeekTools or something.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;:A&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Killing SSH</title>
      <link>http://anthonymcook.com/articles/how-to-kill-an-ssh-session-to-a-remote-server/</link>
      <pubDate>Tue, 04 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/how-to-kill-an-ssh-session-to-a-remote-server/</guid>
      <description>

&lt;h1 id=&#34;howto-kill-an-ssh-session:e57ea8577ac6527631da9776eba42235&#34;&gt;HOWTO: Kill an SSH Session&lt;/h1&gt;

&lt;aside class=&#34;url&#34;&gt;&lt;a href=&#34;http://www.cyberciti.biz/faq/openssh-linux-unix-osx-kill-hung-ssh-session/&#34;&gt;
&lt;div&gt;gleaned from cyberciti.biz&lt;/div&gt;
Kill Hung SSH Session
&lt;/a&gt;&lt;/aside&gt;

&lt;p&gt;Often I&amp;rsquo;m using SSH and my connection drops, or I close my laptop and it disconnects from the wifi. When I get back to my SSH sessions, its locked and unresponsive. Eventually it will time out, but it takes a while.&lt;/p&gt;

&lt;p&gt;Enter: SSH Escape Characters.&lt;/p&gt;

&lt;p&gt;They only work immediately after a newline, and all start with a tilde. The disconnect character is the period (or dot).&lt;/p&gt;

&lt;p&gt;So all you have to do is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[enter]~.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And voila, it&amp;rsquo;ll end your session without &lt;code&gt;kill&lt;/code&gt; or closing your terminal.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a complete list of escape characters from the SSH man page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; .      Disconnect.
 ^Z     Background ssh.
 #      List forwarded connections.
 &amp;amp;      Background ssh at logout when waiting for forwarded connection / X11 sessions to terminate.
 ?      Display a list of escape characters.
 B      Send a BREAK to the remote system (only useful for SSH protocol version 2 and if the peer supports it).
 C      Open command line.  Currently this allows the addition of port forwardings using the -L, -R and -D options (see above).  It also allows the cancellation of existing remote port-forwardings using -KR[bind_address:]port.
         !command allows the user to execute a local command if the PermitLocalCommand option is enabled in ssh_config(5).  Basic help is available, using the -h option.
 R      Request rekeying of the connection (only useful for SSH protocol version 2 and if the peer supports it).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;:A&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Postgres on OSX issues</title>
      <link>http://anthonymcook.com/articles/postgres-on-osx-issues/</link>
      <pubDate>Mon, 03 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/postgres-on-osx-issues/</guid>
      <description>&lt;p&gt;So I was running into this obnoxious error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;psql: FATAL:  role &#34;postgres&#34; does not exist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No matter what I did. It basically means that the user is missing. So I had to create the user by hand. First I initialized the database as my current user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;initdb -D /usr/local/pgsql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then I made sure the daemon was running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;postgres -D /usr/local/pgsql/data &amp;gt;logfile 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I opened a postgres terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;psql template1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And created the postgres user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;create user postgres with password &#39;&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, I gave the postgres user superuser privileges so it can create databases and whatever in my development environment.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alter role postgres with superuser;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OSX-like Natural Scrolling on Windows</title>
      <link>http://anthonymcook.com/articles/osx-like-natural-scrolling-on-windows/</link>
      <pubDate>Mon, 15 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/osx-like-natural-scrolling-on-windows/</guid>
      <description>&lt;aside class=&#34;url&#34;&gt;&lt;a href=&#34;http://one-cheekymonkey.blogspot.com/2012/01/reverse-mouse-scroll-direction-in.html&#34;&gt;
&lt;div&gt;one-cheekymonkey.blogspot.com&lt;/div&gt;
Reverse Mouse Scroll Direction
&lt;/a&gt;&lt;/aside&gt;

&lt;p&gt;I’m going to forget this next time it happens, so I’m putting here for
posterity.&lt;/p&gt;

&lt;p&gt;Navigate to
&lt;code&gt;HKEY\_LOCAL\_MACHINE\\SYSTEM\\CurrentControlSet\\Enum\\HID&lt;/code&gt;, and look
for an entry that resembles &lt;code&gt;VID\_…&lt;/code&gt; Open the &lt;code&gt;Device Parameters&lt;/code&gt; key
under each child entry and reverse the boolean value for the
&lt;code&gt;FlipFlopWheel&lt;/code&gt;.&lt;/p&gt;

&lt;aside&gt;These days I use &lt;code&gt;FlipFlip.exe&lt;/code&gt; (see below) which automates all this for me.
This is still useful for knowing how it works and how it fix it manually.&lt;/aside&gt;

&lt;aside class=&#34;url&#34;&gt;&lt;a href=&#34;https://github.com/jamie-pate/flipflop-windows-wheel&#34;&gt;
&lt;div&gt;github.com&lt;/div&gt;
FlipFlop Windows Wheel
&lt;/a&gt;&lt;/aside&gt;
</description>
    </item>
    
    <item>
      <title>Things Startups Need</title>
      <link>http://anthonymcook.com/articles/cdixon-tumblr-things-startups-do-and-dont-need/</link>
      <pubDate>Fri, 12 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/cdixon-tumblr-things-startups-do-and-dont-need/</guid>
      <description>

&lt;aside class=&#34;url&#34;&gt;&lt;a href=&#34; http://nonchalantrepreneur.com/post/311546950/things-startups-do-and-dont-need &#34;&gt;
&lt;div&gt;http://nonchalantrepreneur.com/&lt;/div&gt;
Things Startups Do and Don&#39;t Need
&lt;/a&gt;&lt;/aside&gt;

&lt;blockquote&gt;
&lt;h2 id=&#34;things-startups-do-need:56ecf96322c3bcad71a958626d7dda19&#34;&gt;Things startups do need&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sunny office&lt;/li&gt;
&lt;li&gt;Windows that open&lt;/li&gt;
&lt;li&gt;Democratically controlled music system&lt;/li&gt;
&lt;li&gt;Two forms of internet access&lt;/li&gt;
&lt;li&gt;Beer on fridays&lt;/li&gt;
&lt;li&gt;EVDO cards&lt;/li&gt;
&lt;li&gt;Video game system&lt;/li&gt;
&lt;li&gt;Good coffee maker&lt;/li&gt;
&lt;li&gt;Proximity to public transportation&lt;/li&gt;
&lt;li&gt;Proximity to park&lt;/li&gt;
&lt;li&gt;Heating that goes all night&lt;/li&gt;
&lt;li&gt;Health care plans…&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Fuck Make</title>
      <link>http://anthonymcook.com/articles/make-colons-and-paths-a-journey-through-hell/</link>
      <pubDate>Thu, 09 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/make-colons-and-paths-a-journey-through-hell/</guid>
      <description>

&lt;h1 id=&#34;make-colons-and-paths-a-journey-through-hell:ea25e1573aedad13419e1d14918d6754&#34;&gt;Make, Colons, and Paths: A Journey Through Hell&lt;/h1&gt;

&lt;aside&gt;tl;dr: If you use timestamps on your deploys, make sure they don&amp;rsquo;t contain colons or &lt;code&gt;make&lt;/code&gt; will explode. Including Ruby extensions.&lt;/aside&gt;

&lt;p&gt;We were running into this error while running &lt;code&gt;bundle install&lt;/code&gt; on Ubuntu:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/rvm/rubies/ruby-1.9.3-p194/bin/ruby extconf.rb
checking for ffi.h... no
checking for ffi.h in /usr/local/include... no
checking for rb_thread_blocking_region()... yes
checking for ruby_native_thread_p()... yes
checking for rb_thread_call_with_gvl()... yes
creating extconf.h
creating Makefile

make
Makefile:158: *** target pattern contains no `%&#39;.  Stop.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The confusing part was when we ran &lt;code&gt;gem install ffi&lt;/code&gt; it ran without a problem.
Googling around told us nothing about why ffi would be failing to build.&lt;/p&gt;

&lt;p&gt;We had run across &lt;a href=&#34;http://lists.trolltech.com/qt-interest/2005-02/thread01024-0.html&#34; target=&#34;_blank&#34;&gt;a post about QT&lt;/a&gt; where a similar error was encountered.&lt;/p&gt;

&lt;p&gt;Then I found a &lt;a href=&#34;http://stackoverflow.com/questions/2052406/escaping-colons-in-filenames-in-a-makefile&#34; target=&#34;_blank&#34;&gt;StackOverflow question&lt;/a&gt; which references &lt;a href=&#34;http://www.mail-archive.com/bug-make@gnu.org/msg03318.html&#34; target=&#34;_blank&#34;&gt;a GNU mailing list thread&lt;/a&gt; that explains the complete impossibility of &lt;code&gt;make&lt;/code&gt; being able to parse a Makefile containing colons.&lt;/p&gt;

&lt;p&gt;It turns out we &lt;em&gt;did&lt;/em&gt; have colons in the filename: We were using %T in the timestamps on our integration server, thus &lt;code&gt;make&lt;/code&gt; was choking.&lt;/p&gt;

&lt;p&gt;The fix was simple, we just replaced the %T with a non-colon-delimited time string and everything worked just fine.&lt;/p&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;p&gt;:A&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Completely remove Xcode from OSX Lion</title>
      <link>http://anthonymcook.com/articles/completely-remove-xcode-from-osx-lion/</link>
      <pubDate>Thu, 12 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/completely-remove-xcode-from-osx-lion/</guid>
      <description>&lt;p&gt;First you want to try running this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /Developer/Library/uninstall-devtools -mode=all
sudo rm -rf /Developer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Repeat above for any other directories beginning with &lt;code&gt;Developer&lt;/code&gt; in your root directory. For some reason I had two: &lt;code&gt;Developer&lt;/code&gt; and &lt;code&gt;Developer-3.2.6&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some systems may have a &lt;code&gt;/Library/Developer/Shared&lt;/code&gt; directory also, so make sure you check for that directory, it will have its own &lt;code&gt;uninstall-devtools&lt;/code&gt; script.&lt;/p&gt;

&lt;p&gt;After that delete the install app (this will make sure the AppStore knows its been uninstalled):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -rf /Applications/Install Xcode.app
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some people may also find deleting the AppStore cache helps, but &lt;strong&gt;only&lt;/strong&gt; do this if the above doesn&amp;rsquo;t work, remember to replace &amp;ldquo;your username&amp;rdquo; with the actual directory name:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -rf /Library/Caches
sudo rm -rf /User/your username/Library/Caches/com.apple.appstore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;p&gt;And let me know if you have any other tips.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails on Heroku</title>
      <link>http://anthonymcook.com/articles/set-up-and-deploy-your-rails-app-to-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/set-up-and-deploy-your-rails-app-to-heroku/</guid>
      <description>&lt;aside&gt;
&lt;strong&gt;EDIT:&lt;/strong&gt;
&lt;em&gt;I no longer recommend Heroku.&lt;/em&gt;
&lt;/aside&gt;

&lt;p&gt;Heroku is a great tool to deploy your applications to the cloud. Heroku is free for small applications, and scales up very easily. It also removes a lot of the hassles of production configuration and deployment so you can get in there and code.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;&lt;ul&gt;&lt;li&gt;You must have a &lt;a href=&#34;https://api.heroku.com/signup&#34; target=&#34;_blank&#34;&gt;Heroku account&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll need an &lt;a href=&#34;http://schacon.github.com/git/user-manual.html#creating-a-new-repository&#34; target=&#34;_blank&#34;&gt;initialized git&lt;/a&gt; repo for your app.&lt;/li&gt;
&lt;li&gt;Your app will need to have the &lt;a href=&#34;http://rubygems.org/gems/pg&#34; target=&#34;_blank&#34;&gt;pg&lt;/a&gt; and &lt;a href=&#34;http://devcenter.heroku.com/articles/heroku-command&#34; target=&#34;_blank&#34;&gt;heroku&lt;/a&gt; gems installed.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Create App, Add Remote, Push Code&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;Replace &amp;ldquo;appname&amp;rdquo; in the following examples with the name of your application, or some other mnemonic placeholder.&lt;/p&gt;

&lt;p&gt;&lt;ol&gt;&lt;li&gt;$ &lt;code&gt;heroku apps:create appname &amp;ndash;stack cedar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;$ &lt;code&gt;git remote add heroku git@heroku.com:appname.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;$ &lt;code&gt;git push heroku&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Done!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h3&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;&lt;ul&gt;&lt;li&gt;If you run into any issues, make sure the Heroku gem is &lt;a href=&#34;http://devcenter.heroku.com/articles/heroku-command&#34; target=&#34;_blank&#34;&gt;configured with your credentials&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Pay close attention to the output when you try to &lt;code&gt;git push heroku&lt;/code&gt;, it&amp;rsquo;ll give you the play-by-play of each step in the deployment process.&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;heroku logs&lt;/code&gt; to see what the errors are if you&amp;rsquo;re getting 500s when you try to access your application in production. I use &lt;code&gt;heroku logs -f&lt;/code&gt; to watch logged information in real-time as it comes in (hit control-c to stop).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;⦂∀&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Client-Side Storage</title>
      <link>http://anthonymcook.com/articles/html5-and-client-side-storage-stack/</link>
      <pubDate>Sun, 04 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/html5-and-client-side-storage-stack/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m resurrecting an old project of mine now that technology has caught up.
Even so, it&amp;rsquo;s amazing how much time I&amp;rsquo;ve had to spend just trying to find the right tools to use to fulfill my requirements.&lt;/p&gt;

&lt;h2 id=&#34;requirements:e0fca4bfbc5c3cdad728b0e6ea30874a&#34;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cross-Browser&lt;/strong&gt;: Needs to work in every modern browser, including mobile.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persistant offline storage&lt;/strong&gt;:
In order to support all browsers I must also support the following technologies:

&lt;ul&gt;
&lt;li&gt;IndexedDB&lt;/li&gt;
&lt;li&gt;WebSQL&lt;/li&gt;
&lt;li&gt;localStorage&lt;/li&gt;
&lt;li&gt;Some fallback if none of the above are available..&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gracefully degrade&lt;/strong&gt; functionality on less capable browsers.&lt;/li&gt;
&lt;li&gt;Encourage users to &lt;strong&gt;modernize&lt;/strong&gt; their web experience.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimize&lt;/strong&gt; layout according to the viewable space in the browser.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sane&lt;/strong&gt;, consistant starting point for styling pages.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;clean&lt;/strong&gt;, extensible way of interacting with Javascript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;client-side-tools:e0fca4bfbc5c3cdad728b0e6ea30874a&#34;&gt;Client-Side Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.initializr.com/&#34; target=&#34;_blank&#34;&gt;Initializr&lt;/a&gt; - Provides a nice frontend scaffold:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.modernizr.com/&#34; target=&#34;_blank&#34;&gt;Modernizr&lt;/a&gt;: Detect browser capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jquery.com/&#34; target=&#34;_blank&#34;&gt;Jquery&lt;/a&gt;: Improves and tidies interactions with Javascript objects.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scottjehl/Respond#readme&#34; target=&#34;_blank&#34;&gt;Respond.js&lt;/a&gt;: Responsive web, layout optimized to viewable space.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://html5boilerplate.com/&#34; target=&#34;_blank&#34;&gt;HTML5Boilerplate&lt;/a&gt;: Sane and consistant default stylesheet.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://westcoastlogic.com/lawnchair/&#34; target=&#34;_blank&#34;&gt;Lawnchair&lt;/a&gt;: Provides a cohesive API for client-side offline storage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;server-side-tools:e0fca4bfbc5c3cdad728b0e6ea30874a&#34;&gt;Server-Side Tools&lt;/h2&gt;

&lt;p&gt;Right now I&amp;rsquo;m using some other tools to create a functional prototype of the user experience:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blahed/frank#readme&#34; target=&#34;_blank&#34;&gt;Frank&lt;/a&gt;: A static website generator.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://haml-lang.com/&#34; target=&#34;_blank&#34;&gt;Haml&lt;/a&gt;: Because HTML&amp;rsquo;s syntax sucks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sass-lang.com/&#34; target=&#34;_blank&#34;&gt;Sass&lt;/a&gt;: Because CSS&amp;rsquo;s syntax both sucks and is lacking in many areas.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;http://mustache.github.com/&#34; target=&#34;_blank&#34;&gt;Mustache&lt;/a&gt;: Because logic doesn&amp;rsquo;t belong in views.&lt;/del&gt; - Frank is having issues loading Mustache templates, even after I spent some time &lt;a href=&#34;https://github.com/acook/frank&#34; target=&#34;_blank&#34;&gt;hacking&lt;/a&gt; at it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jashkenas.github.com/coffee-script/&#34; target=&#34;_blank&#34;&gt;Coffeescript&lt;/a&gt;: Because Javascript is great, but its syntax sucks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m not sold on Frank yet, there was some other static site generators I was considering so if Frank starts getting in my way I&amp;rsquo;ll give them a try.&lt;/p&gt;

&lt;p&gt;⦂∀&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>deep inspect</title>
      <link>http://anthonymcook.com/articles/getting-more-information-about-ruby-objects/</link>
      <pubDate>Fri, 02 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/getting-more-information-about-ruby-objects/</guid>
      <description>&lt;p&gt;Been working a good chunk of the day with analyzing Ruby objects in &lt;a href=&#34;http://pry.github.com/&#34; target=&#34;_blank&#34;&gt;Pry&lt;/a&gt;, and realized I needed more information. So I wrote a module that can be included on &lt;a href=&#34;http://apidock.com/ruby/Object&#34; target=&#34;_blank&#34;&gt;Object&lt;/a&gt; that recursively inspects the internal structure of objects.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://33.media.tumblr.com/tumblr_lqx2hbiDXg1qetbyr.png&#34; alt=&#34;Output of RSpec::Rails.contents&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Output of &lt;code&gt;RSpec::Rails.contents&lt;/code&gt; above. I&amp;rsquo;ve since renamed the method, but the output is very similar.&lt;/p&gt;

&lt;p&gt;Take a look at the &lt;a href=&#34;https://gist.github.com/1190081&#34; target=&#34;_blank&#34;&gt;code up on Gist&lt;/a&gt;.&lt;/p&gt;

&lt;aside class=&#34;url&#34;&gt;
&lt;a href=&#34;https://gist.github.com/1190081&#34; target=&#34;_blank&#34;&gt;
&lt;div&gt;gist.github.com&lt;/div&gt;
introspection
&lt;/a&gt;
&lt;/aside&gt;

&lt;p&gt;⦂∀&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CMDR</title>
      <link>http://anthonymcook.com/articles/cmdr-command-ruby/</link>
      <pubDate>Wed, 24 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/cmdr-command-ruby/</guid>
      <description>

&lt;aside class=&#34;url&#34;&gt;&lt;a href=http://github.com/acook/cmdr&#34;&gt;
&lt;div&gt;github.com&lt;/div&gt;
cmdr
&lt;/a&gt;&lt;/aside&gt;

&lt;aside&gt;
&lt;strong&gt;EDIT:&lt;/strong&gt;
&lt;em&gt;This post has been modified from its original form.&lt;/em&gt;
&lt;/aside&gt;

&lt;p&gt;This is just an idea, its not even a &amp;ldquo;thing&amp;rdquo; yet, but here&amp;rsquo;s some of the ideas that have been stewing in my skull for some time now.&lt;/p&gt;

&lt;h2 id=&#34;prior-art:34c8c68920362a1488e09678fe27933f&#34;&gt;Prior Art&lt;/h2&gt;

&lt;p&gt;Before even glancing at this project, check out &lt;a href=&#34;https://github.com/pry/pry&#34; target=&#34;_blank&#34;&gt;Pry&lt;/a&gt;,
&lt;a href=&#34;https://github.com/hayeah/rubish&#34; target=&#34;_blank&#34;&gt;Rubbish&lt;/a&gt;,
and &lt;a href=&#34;https://github.com/adamwiggins/rush&#34; target=&#34;_blank&#34;&gt;Rush&lt;/a&gt;.
Pry in particular in incredible. For the moment I have rather different goals though.&lt;/p&gt;

&lt;h2 id=&#34;background:34c8c68920362a1488e09678fe27933f&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;So here&amp;rsquo;s the deal, years ago I read about the new fancy-shmancy
&lt;a href=&#34;http://en.wikipedia.org/wiki/Windows_PowerShell&#34; title=&#34;Yes I still call it Monad because it was an awesome name, dammit!&#34; target=&#34;_blank&#34;&gt;Monad&lt;/a&gt;.
Its goal, as I understood it boiled down to &lt;em&gt;commands as objects&lt;/em&gt;.
It was a fantastc concept. Naturally, as it has with many things, Microsoft failed to deliver.&lt;/p&gt;

&lt;p&gt;And again, as it often does, the &lt;a href=&#34;http://en.wikipedia.org/wiki/Oberon_(programming_language)&#34; title=&#34;AKA: The most badass shit no one has heard of.&#34; target=&#34;_blank&#34;&gt;Oberon&lt;/a&gt; system did it first and better. I actually used the Oberon OS long before Monad was even thought of, but Monad is a more visible example.&lt;/p&gt;

&lt;p&gt;In both cases they assumed the underlying system was also an object system and then gave you immense power over those elements, accessible from the commandline just like a standard shell.
At this time of this writing, I am not working on my own operating system so I have no such luxury.
However, unixy systems such as Linux, OS X, BSD, Hurd, and others provide a lot of process-level information and documentation that is exceedingly simple to access and parse. Provided you know where to look.&lt;/p&gt;

&lt;h2 id=&#34;the-big-idea:34c8c68920362a1488e09678fe27933f&#34;&gt;The Big Idea&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;d like to encapsulate commands and external processes as objects and replace most built-in bash commands with more object-oriented (and prettier) versions.&lt;/p&gt;

&lt;h2 id=&#34;use-cases:34c8c68920362a1488e09678fe27933f&#34;&gt;Use Cases&lt;/h2&gt;

&lt;p&gt;Alright, well met me give you a couple of examples of what I&amp;rsquo;d like to be able to do with cmdr.
&lt;em&gt;this is all pseudocode at the moment&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;commands-are-persistant-objects:34c8c68920362a1488e09678fe27933f&#34;&gt;Commands are Persistant Objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ls
.git/  README.markdown
$ hist
1 ls &amp;amp;lt;succeded a few seconds ago&amp;amp;gt;
$ hist.raw
[
    #&amp;amp;lt;Cmdr&amp;amp;gt;,
    {command: &#39;ls&#39;, output: [#&amp;amp;lt;Cmdr::Output::Stdout: &amp;quot;.git/  README.markdown&amp;quot;&amp;amp;gt;], status: #&amp;amp;lt;Cmdr::Status::External::Process: pid 82960 exit 0&amp;amp;gt;, type: External, start_time: 011-08-24 00:27:59 -0700, exit_time: 011-08-24 00:27:59 -0700},
    {command: &#39;hist&#39;, output: [#&amp;amp;lt;Cmdr::CommandHistory&amp;amp;gt;], status: Success, type: Internal, start_time: 011-08-24 00:28:02 -0700, exit_time: 011-08-24 00:28:03 -0700},
    {command: &#39;hist.raw&#39;, output: [], status: Running, type: Internal, start_time: 011-08-24 00:28:05 -0700, exit_time: nil}
]
$ cmdhist[1].output
.git/  README.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;robust-directory-history:34c8c68920362a1488e09678fe27933f&#34;&gt;Robust Directory History&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~
$ cd /
$ cd.hist
pwd /
1   ~
2   /home/acook/pork/cmdr
$ back
~
$ pwd
/home/acook
$ cd.hist
0   /
pwd ~
1   ~
2   /home/acook/pork/cmdr
$ fore
/
$ pwd
/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;overridable-default-command-options:34c8c68920362a1488e09678fe27933f&#34;&gt;Overridable Default Command Options&lt;/h3&gt;

&lt;p&gt;Much like what aliases are often used for in bash.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls.opts.defaults &amp;amp;lt;&amp;amp;lt; &#39;1&#39;
$ ls
.git/
README.markdown
$ ls.opts.only :b
.git/  README.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;session-environment-persistance:34c8c68920362a1488e09678fe27933f&#34;&gt;Session environment persistance&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ x = 1
x = 1
$ ls
.git/  README.markdown
$ exit                    # exit cmdr
sh-3.2$ cmdr              # rerun cmdr from sh
cmdr v0.1
$ hist
1 x = 1 &amp;amp;lt;succeeded about a minute ago&amp;amp;gt;
2 ls    &amp;amp;lt;succeeded less than a minute ago&amp;amp;gt;
3 exit  &amp;amp;lt;succedded less than a minute ago&amp;amp;gt;
$ x
=&amp;amp;gt; 1
&lt;/code&gt;&lt;/pre&gt;

&lt;aside class=&#34;url&#34;&gt;&lt;a href=http://github.com/acook/cmdr&#34;&gt;
&lt;div&gt;github.com&lt;/div&gt;
cmdr
&lt;/a&gt;&lt;/aside&gt;
</description>
    </item>
    
    <item>
      <title>IRB &amp; OSX DELETE</title>
      <link>http://anthonymcook.com/articles/get-the-delete-key-working-in-irb-on-osx-with-two/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/get-the-delete-key-working-in-irb-on-osx-with-two/</guid>
      <description>&lt;aside&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; &lt;em&gt;I mean forward-delete not backspace. This is function+delete on my MacBook and the standard delete key in the navigation cluster on my shiny &lt;a href=&#34;http://www.daskeyboard.com/model-s-ultimate/&#34; target=&#34;_blank&#34;&gt;Das Keyboard&lt;/a&gt;.&lt;/em&gt;&lt;/aside&gt;

&lt;p&gt;Its been driving me nuts. The delete key doesn&amp;rsquo;t work in IRB (or &lt;a href=&#34;https://github.com/pry/pry#readme&#34; target=&#34;_blank&#34;&gt;Pry&lt;/a&gt;) on OSX!&lt;/p&gt;

&lt;p&gt;Anyway, today I took a couple of minutes and tried this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install readline
rvm install 1.9.2  --with-readline-dir=/usr/local/Cellar/readline/6.2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It works now. That&amp;rsquo;s seriously all I had to do. No patching required!&lt;/p&gt;

&lt;p&gt;This is like the day I got the number pad working in all of Vim on OSX. And that was a wonderful day!&lt;/p&gt;

&lt;p&gt;Its possible that &lt;a href=&#34;http://beginrescueend.com/packages/readline/&#34; target=&#34;_blank&#34;&gt;installing readline with rvm&lt;/a&gt; might have the same effect, but I wanted readline to be readily available to other applications I installed as well.&lt;/p&gt;

&lt;p&gt;Use whatever the current version of readline is for you. Do &lt;code&gt;ls /usr/local/Cellar/readline/&lt;/code&gt; to find it.&lt;/p&gt;

&lt;p&gt;⦂∀&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Support from your Peers</title>
      <link>http://anthonymcook.com/articles/support-from-your-peers-is-something-you-need-to/</link>
      <pubDate>Tue, 16 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/support-from-your-peers-is-something-you-need-to/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Support from your peers is something you need to earn by looking at
what’s important to them. The person that is showing you resistance
may have a great idea you can help facilitate and quickly he goes from
rival to ally. I would like to add that being an effective leader will
directly depend on how you are received at the peer level today and
earning their respect is essential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Blake Thomas in an interview with Maria Dubov at MMD and a good friend
of mine.&lt;/p&gt;

&lt;p&gt;He was just in town last week, it was first time I’d seen him since I’d
moved to Portland from Chicago.&lt;/p&gt;

&lt;p&gt;Read the whole interview here:&lt;/p&gt;

&lt;aside class=&#34;url&#34;&gt;&lt;a href=&#34;http://www.mmdtech.com/2011/08/planning-your-next-promotion-blake-thomas-tells-his-story&#34;&gt;
&lt;div&gt;mmdtech.com&lt;/div&gt;
Planning Your Next Promotion
&lt;/a&gt;&lt;/aside&gt;
</description>
    </item>
    
    <item>
      <title>Pixen vs Seashore and Firefox vs Chrome</title>
      <link>http://anthonymcook.com/articles/pixen-vs-seashore-and-firefox-vs-chrome/</link>
      <pubDate>Sun, 14 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://anthonymcook.com/articles/pixen-vs-seashore-and-firefox-vs-chrome/</guid>
      <description>&lt;p&gt;So I was just playing with some ideas to create my own Tumblr theme, an I noticed a few differences between the above mentioned applications.&lt;/p&gt;

&lt;p&gt;This isn&amp;rsquo;t a debate about which is better, this is just a couple of oddities I&amp;rsquo;ve noticed.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&#34;http://www.macupdate.com/app/mac/13363/pixen&#34; target=&#34;_blank&#34;&gt;Pixen&lt;/a&gt; vs &lt;a href=&#34;http://seashore.sourceforge.net/The_Seashore_Project/About.html&#34; target=&#34;_blank&#34;&gt;Seashore&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;These are &lt;em&gt;very&lt;/em&gt; different applications and I&amp;rsquo;m using them for very specific tasks, which one may be better suited for than the other.&lt;/p&gt;

&lt;h2&gt;Pixen&lt;/h2&gt;

&lt;p&gt;&lt;ul&gt;&lt;li&gt;When you save a GIF, it automatically assumes an alpha channel.&lt;/li&gt;
&lt;li&gt;Resizing your canvas is simple: &lt;code&gt;Edit/Resize Canvas&amp;hellip;&lt;/code&gt; and enter your dimensions&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Seashore&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;&lt;ul&gt;&lt;li&gt;No alpha channel when you save a GIF. &lt;/li&gt;
&lt;li&gt;Even when the background of your image is transparent. &lt;/li&gt;
&lt;li&gt;In fact I don&amp;rsquo;t see an option to save GIFs with an alpha channel at all. (!?)&lt;/li&gt;
&lt;li&gt;After some hunting and experimenting I discovered how to resize my canvas: &lt;code&gt;Image/Image Boundaries&amp;hellip;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can&amp;rsquo;t just set your dimensions, you have to tell it &lt;em&gt;where&lt;/em&gt; to expand/contract.&lt;/li&gt;
&lt;li&gt;That&amp;rsquo;s more powerful, its great, but it doesn&amp;rsquo;t explain that or warn you if you just enter your dimensions and hit &amp;ldquo;Set&amp;rdquo;. Nothing happens at all.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;My Opinion&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;Seashore is clearly a more stable and powerful application, Pixen is designed for pixel drawing and animation, that&amp;rsquo;s about it. The advantage to Pixen&amp;rsquo;s narrow mindset is that they made it intuitive to use and have sane defaults.&lt;/p&gt;

&lt;p&gt;This is a lesson to me, and I must remember it. And the lesson is in simplicity and what we can learn from it.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&#34;http://www.mozilla.com/en-US/firefox/fx/&#34; target=&#34;_blank&#34;&gt;Firefox&lt;/a&gt; vs &lt;a href=&#34;http://www.google.com/chrome/&#34; target=&#34;_blank&#34;&gt;Chrome&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This is very zoomed in, because I&amp;rsquo;m working with pixels here.&lt;/p&gt;

&lt;h2&gt;Firefox PNG and Font Rendering&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://38.media.tumblr.com/tumblr_lpxx4uF0Bs1qetbyr.png&#34; alt=&#34;&#34;/&gt;&lt;/p&gt;

&lt;h2&gt;Chrome PNG and Font Rendering&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://31.media.tumblr.com/tumblr_lpxx7cAhHV1qetbyr.png&#34; alt=&#34;&#34;/&gt;&lt;/p&gt;

&lt;h2&gt;My Opinion&lt;/h2&gt;

&lt;p&gt;Judgement call? Firefox beats the pants off of Chrome as far as repeating image rendering. It treats the entire element as a single image and dithers accordingly. That&amp;rsquo;s a fantastic way to do it. You can actually just barely see the dividing line between the top and bottom of the Firefox image, that&amp;rsquo;s because those are two different &lt;code&gt;p&lt;/code&gt;-tags.&lt;/p&gt;

&lt;p&gt;The font rendering is pretty similar, but again I have to give it to Firefox here. At huge scales, their fonts look cleaner.&lt;/p&gt;

&lt;p&gt;At normal scales I can&amp;rsquo;t consciously tell the difference between the image nor font rendering. But still, I&amp;rsquo;d like to see those features implemented in Chrome.&lt;/p&gt;

&lt;p&gt;I use both browsers regularly, and strongly prefer Chrome, but there&amp;rsquo;s still certainly things to be learned from other browsers.&lt;/p&gt;

&lt;p&gt;⦂∀&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>